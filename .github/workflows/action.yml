name: Hexo Auto-Deploy
on:
  push:
    branches:
      - master

jobs:
  build:
    name: Hexo Auto-Deploy by GitHub Actions
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Set up Node.js environment
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    # 3. Cache node_modules (only if package-lock.json exists)
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}  

    # 4. Install Hexo CLI and dependencies
    - name: Install Hexo dependencies
      run: |
        npm install hexo-cli -g
        npm install

    # 5. Generate public files (build Hexo)
    - name: Generate public files
      run: |
        hexo clean
        hexo generate

    # 6. Set global git config (only once)
    - name: Set up Git config
      run: |
        git config --global user.name "PGzxc"
        git config --global user.email "827489398@qq.com"

    # 7. Deploy to GitHub
    - name: Deploy to GitHub Pages
      env:
        GITHUB_REPO: github.com/PGzxc/PGzxc.github.io.git
      run: |
        cd ./public
        git init
        git add .
        git commit -m "GitHub Actions Auto Builder at $(date +'%Y-%m-%d %H:%M:%S')"
        git push --force --quiet "https://${{ secrets.ACCESS_TOKEN }}@$GITHUB_REPO" master:hexo

    # 8. Optionally deploy to another service (e.g., Coding)
    # - name: Deploy to Coding Pages
    #   env:
    #     CODING_REPO: e.coding.net/pgzxc/pgzxc/pgzxc.git
    #   run: |
    #     cd ./public
    #     git init
    #     git add .
    #     git commit -m "GitHub Actions Auto Builder at $(date +'%Y-%m-%d %H:%M:%S')"
    #     git push --force --quiet "https://JcwUpKlfjB:${{ secrets.CODING_TOKEN }}@$CODING_REPO" master:hexo
